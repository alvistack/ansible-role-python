---

os: linux

dist: bionic

language: shell

cache:
  directories:
    - $HOME/.cache
    - $HOME/.vagrant.d
    - /etc/libvirt
    - /var/lib/libvirt

env:
  global:
    - ANSIBLE_ROLES_PATH="$HOME/.ansible/roles"
    - MOLECULE_INSTANCE_NAME="$USER-$TRAVIS_BUILD_ID"
  jobs:
    - MOLECULE_SCENARIO_NAME="centos-7"
    - MOLECULE_SCENARIO_NAME="suse-15"
    - MOLECULE_SCENARIO_NAME="ubuntu-16.04"
    - MOLECULE_SCENARIO_NAME="ubuntu-18.04"
    - MOLECULE_SCENARIO_NAME="ubuntu-19.10"

before_install:
  - |
    curl -Os https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_x86_64.deb
    curl -Os https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_SHA256SUMS
    curl -Os https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_SHA256SUMS.sig
    gpg --receive-key 51852D87348FFC4C
    gpg --verify vagrant_2.2.7_SHA256SUMS.sig vagrant_2.2.7_SHA256SUMS
    sha256sum -c vagrant_2.2.7_SHA256SUMS 2>&1 | grep OK
    sudo apt-get update && sudo apt-get install -y bridge-utils dnsmasq-base ebtables libvirt-bin libvirt-dev qemu-kvm qemu-utils ruby-dev
    sudo dpkg -i vagrant_2.2.7_x86_64.deb
    sudo vagrant plugin install vagrant-libvirt

  - |
    sudo apt-get -y purge python3-openssl && sudo apt-get -y autoremove
    sudo apt-get update && sudo apt-get install -y ca-certificates curl gcc iproute2 python3 python3-dev sudo
    curl -skL https://bootstrap.pypa.io/get-pip.py | sudo -H python3
    sudo -H pip3 install --upgrade --ignore-installed --requirement requirements.txt

install:
  - |
    export ROLE=$(echo $TRAVIS_REPO_SLUG | sed 's/^.*\/ansible-role-/\//g')
    mkdir -p $HOME/.ansible/roles
    ln -s $TRAVIS_BUILD_DIR $HOME/.ansible/roles/$ROLE

jobs:
  include:
    - &dependency
      stage: dependency
      script: sudo -E molecule dependency -s $MOLECULE_SCENARIO_NAME
      env: MOLECULE_SCENARIO_NAME="ubuntu-18.04"
    - <<: *dependency
      env: MOLECULE_SCENARIO_NAME="centos-7"
    - <<: *dependency
      env: MOLECULE_SCENARIO_NAME="suse-15"
    - <<: *dependency
      env: MOLECULE_SCENARIO_NAME="ubuntu-16.04"
    - <<: *dependency
      env: MOLECULE_SCENARIO_NAME="ubuntu-19.10"

    - &lint
      stage: lint
      script: sudo -E molecule lint -s $MOLECULE_SCENARIO_NAME
      env: MOLECULE_SCENARIO_NAME="ubuntu-18.04"
    - <<: *lint
      env: MOLECULE_SCENARIO_NAME="centos-7"
    - <<: *lint
      env: MOLECULE_SCENARIO_NAME="suse-15"
    - <<: *lint
      env: MOLECULE_SCENARIO_NAME="ubuntu-16.04"
    - <<: *lint
      env: MOLECULE_SCENARIO_NAME="ubuntu-19.10"

    - &syntax
      stage: syntax
      script: sudo -E molecule syntax -s $MOLECULE_SCENARIO_NAME
      env: MOLECULE_SCENARIO_NAME="ubuntu-18.04"
    - <<: *syntax
      env: MOLECULE_SCENARIO_NAME="centos-7"
    - <<: *syntax
      env: MOLECULE_SCENARIO_NAME="suse-15"
    - <<: *syntax
      env: MOLECULE_SCENARIO_NAME="ubuntu-16.04"
    - <<: *syntax
      env: MOLECULE_SCENARIO_NAME="ubuntu-19.10"

    - &create
      stage: create
      script: sudo -E molecule create -s $MOLECULE_SCENARIO_NAME
      env: MOLECULE_SCENARIO_NAME="ubuntu-18.04"
    - <<: *create
      env: MOLECULE_SCENARIO_NAME="centos-7"
    - <<: *create
      env: MOLECULE_SCENARIO_NAME="suse-15"
    - <<: *create
      env: MOLECULE_SCENARIO_NAME="ubuntu-16.04"
    - <<: *create
      env: MOLECULE_SCENARIO_NAME="ubuntu-19.10"

    - &converge
      stage: converge
      script: sudo -E molecule converge -s $MOLECULE_SCENARIO_NAME
      env: MOLECULE_SCENARIO_NAME="ubuntu-18.04"
    - <<: *converge
      env: MOLECULE_SCENARIO_NAME="centos-7"
    - <<: *converge
      env: MOLECULE_SCENARIO_NAME="suse-15"
    - <<: *converge
      env: MOLECULE_SCENARIO_NAME="ubuntu-16.04"
    - <<: *converge
      env: MOLECULE_SCENARIO_NAME="ubuntu-19.10"

    - &idempotence
      stage: idempotence
      script: travis_wait sudo -E molecule idempotence -s $MOLECULE_SCENARIO_NAME
      env: MOLECULE_SCENARIO_NAME="ubuntu-18.04"
    - <<: *idempotence
      env: MOLECULE_SCENARIO_NAME="centos-7"
    - <<: *idempotence
      env: MOLECULE_SCENARIO_NAME="suse-15"
    - <<: *idempotence
      env: MOLECULE_SCENARIO_NAME="ubuntu-16.04"
    - <<: *idempotence
      env: MOLECULE_SCENARIO_NAME="ubuntu-19.10"
    
    - &verify
      stage: verify
      script: sudo -E molecule verify -s $MOLECULE_SCENARIO_NAME
      env: MOLECULE_SCENARIO_NAME="ubuntu-18.04"
    - <<: *verify
      env: MOLECULE_SCENARIO_NAME="centos-7"
    - <<: *verify
      env: MOLECULE_SCENARIO_NAME="suse-15"
    - <<: *verify
      env: MOLECULE_SCENARIO_NAME="ubuntu-16.04"
    - <<: *verify
      env: MOLECULE_SCENARIO_NAME="ubuntu-19.10"
  allow_failures:
    - env: MOLECULE_SCENARIO_NAME="centos-7"
    - env: MOLECULE_SCENARIO_NAME="suse-15"

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
